name: 'Minecraft plugin test'
description: 'Tests a Minecraft plugin for servers'
inputs:
  path_plugin:
    description: 'Path to the directory containing the plugin'
    required: true
    default: target
  commands:
    description: 'Commands that should be executed in the server'
    required: false
    default: |
      stop
runs:
  using: "composite"
  steps:
    - name: Check Linux
      if: runner.os != 'Linux'
      run: |
        echo "Only Linux is currently supported for this action"
        exit 1
      shell: bash
    - name: Check Plugin's existence
      run: |
        found=false
        for file in ${{ inputs.path_plugin }}/*; do
          filename=$(basename "$file")
          extension=$(echo "${filename}" | awk -F. '{print $NF}')
          if [ "${extension}" = "jar" ]; then
            found=true
          fi
        if [ "${found}" = false ]; then
          echo "Plugin not found"
          exit 1
        fi
        done
      working-directory: ${{ github.workspace }}
      shell: bash
    - name: Preparation before Server test
      run: |
        if [ ! -d "${{ github.workspace }}/server" ]; then
          mkdir ${{ github.workspace }}/server
        fi
        if [ ! -d "${{ github.workspace }}/server/plugins" ]; then
          mkdir ${{ github.workspace }}/server/plugins
        fi
        if [ ! -d "${{ github.workspace }}/server/plugins/.paper-remapped" ]; then
          mkdir ${{ github.workspace }}/server/plugins/.paper-remapped
        fi
        for out in ${{ github.workspace }}/${{ inputs.path_plugin }}/*; do
          filename=$(basename "$out")
          extension=$(echo "${filename}" | awk -F. '{print $NF}')
          if [ "${extension}" = "jar" ]; then
            cp -i "$out" ${{ github.workspace }}/server/plugins/
          fi
        done
        for cfg in cfg/*; do
          cp -i "$cfg" ${{ github.workspace }}/server/
        done
      working-directory: ${{ github.action_path }}
      shell: bash
    - name: Download the JRE needed and latest PurpurMC server
      run: |
        cd ../../../
        npm install tar
        node UpdateServer.js ${{ github.workspace }}
      working-directory: ${{ github.action_path }}
      shell: bash
    - name: Test plugin on PurpurMC server
      run: |
        mv versions.json server/
        mv jre server/jre/
        mv server.jar server/
        cd server
        chmod +x jre/bin/java
        echo "${{ inputs.commands }} stop" >> test-commands.txt
        jre/bin/java -Xmx512M -Xms512M --add-modules=jdk.incubator.vector -jar server.jar nogui < test-commands.txt
      working-directory: ${{ github.workspace }}
      shell: bash
    - name: Post cleanup
      run: |
        rm -rf server
      shell: bash